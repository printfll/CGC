// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: userservice.proto
// </auto-generated>
// Original file comments:
// Copyright (c) Microsoft. All rights reserved.
//
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Microsoft.CGC.DataAccess.GRPC {
  public static partial class UserService
  {
    static readonly string __ServiceName = "Microsoft.CGC.DataAccess.GRPC.UserService";

    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest> __Marshaller_AddUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse> __Marshaller_AddUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest> __Marshaller_RemoveUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse> __Marshaller_RemoveUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest> __Marshaller_AddGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse> __Marshaller_AddGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest> __Marshaller_RemoveGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse> __Marshaller_RemoveGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest> __Marshaller_AddAccountToGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse> __Marshaller_AddAccountToGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest> __Marshaller_RemoveAccountFromGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse> __Marshaller_RemoveAccountFromGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest> __Marshaller_GetUserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse> __Marshaller_GetUserResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest> __Marshaller_GetGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse> __Marshaller_GetGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest> __Marshaller_GetOwnedGroupsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse> __Marshaller_GetOwnedGroupsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest> __Marshaller_GetMembersOfGroupRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse> __Marshaller_GetMembersOfGroupResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest> __Marshaller_GetMembershipsOfAccountRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse> __Marshaller_GetMembershipsOfAccountResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest, global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse> __Method_AddUser = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest, global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUser",
        __Marshaller_AddUserRequest,
        __Marshaller_AddUserResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse> __Method_RemoveUser = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUser",
        __Marshaller_RemoveUserRequest,
        __Marshaller_RemoveUserResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse> __Method_AddGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGroup",
        __Marshaller_AddGroupRequest,
        __Marshaller_AddGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse> __Method_RemoveGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveGroup",
        __Marshaller_RemoveGroupRequest,
        __Marshaller_RemoveGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse> __Method_AddAccountToGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAccountToGroup",
        __Marshaller_AddAccountToGroupRequest,
        __Marshaller_AddAccountToGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse> __Method_RemoveAccountFromGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveAccountFromGroup",
        __Marshaller_RemoveAccountFromGroupRequest,
        __Marshaller_RemoveAccountFromGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest, global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse> __Method_GetUser = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest, global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUser",
        __Marshaller_GetUserRequest,
        __Marshaller_GetUserResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse> __Method_GetGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGroup",
        __Marshaller_GetGroupRequest,
        __Marshaller_GetGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest, global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse> __Method_GetOwnedGroups = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest, global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOwnedGroups",
        __Marshaller_GetOwnedGroupsRequest,
        __Marshaller_GetOwnedGroupsResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse> __Method_GetMembersOfGroup = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest, global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMembersOfGroup",
        __Marshaller_GetMembersOfGroupRequest,
        __Marshaller_GetMembersOfGroupResponse);

    static readonly grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest, global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse> __Method_GetMembershipsOfAccount = new grpc::Method<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest, global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMembershipsOfAccount",
        __Marshaller_GetMembershipsOfAccountRequest,
        __Marshaller_GetMembershipsOfAccountResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    public abstract partial class UserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse> AddUser(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse> RemoveUser(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse> AddGroup(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse> RemoveGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse> AddAccountToGroup(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse> RemoveAccountFromGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse> GetUser(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse> GetGroup(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse> GetOwnedGroups(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse> GetMembersOfGroup(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse> GetMembershipsOfAccount(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse AddUser(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse AddUser(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse> AddUserAsync(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse> AddUserAsync(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddUser, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse RemoveUser(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse RemoveUser(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse> RemoveUserAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse> RemoveUserAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUser, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse AddGroup(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse AddGroup(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse> AddGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse> AddGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse RemoveGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse RemoveGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse> RemoveGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse> RemoveGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse AddAccountToGroup(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddAccountToGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse AddAccountToGroup(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAccountToGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse> AddAccountToGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddAccountToGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse> AddAccountToGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAccountToGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse RemoveAccountFromGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveAccountFromGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse RemoveAccountFromGroup(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveAccountFromGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse> RemoveAccountFromGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveAccountFromGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse> RemoveAccountFromGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveAccountFromGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse GetUser(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse GetUser(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse> GetUserAsync(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse> GetUserAsync(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUser, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse GetGroup(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse GetGroup(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse> GetGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse> GetGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse GetOwnedGroups(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOwnedGroups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse GetOwnedGroups(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOwnedGroups, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse> GetOwnedGroupsAsync(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOwnedGroupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse> GetOwnedGroupsAsync(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOwnedGroups, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse GetMembersOfGroup(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetMembersOfGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse GetMembersOfGroup(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMembersOfGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse> GetMembersOfGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetMembersOfGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse> GetMembersOfGroupAsync(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMembersOfGroup, null, options, request);
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse GetMembershipsOfAccount(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetMembershipsOfAccount(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse GetMembershipsOfAccount(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMembershipsOfAccount, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse> GetMembershipsOfAccountAsync(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetMembershipsOfAccountAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse> GetMembershipsOfAccountAsync(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMembershipsOfAccount, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddUser, serviceImpl.AddUser)
          .AddMethod(__Method_RemoveUser, serviceImpl.RemoveUser)
          .AddMethod(__Method_AddGroup, serviceImpl.AddGroup)
          .AddMethod(__Method_RemoveGroup, serviceImpl.RemoveGroup)
          .AddMethod(__Method_AddAccountToGroup, serviceImpl.AddAccountToGroup)
          .AddMethod(__Method_RemoveAccountFromGroup, serviceImpl.RemoveAccountFromGroup)
          .AddMethod(__Method_GetUser, serviceImpl.GetUser)
          .AddMethod(__Method_GetGroup, serviceImpl.GetGroup)
          .AddMethod(__Method_GetOwnedGroups, serviceImpl.GetOwnedGroups)
          .AddMethod(__Method_GetMembersOfGroup, serviceImpl.GetMembersOfGroup)
          .AddMethod(__Method_GetMembershipsOfAccount, serviceImpl.GetMembershipsOfAccount).Build();
    }

  }
}
#endregion
