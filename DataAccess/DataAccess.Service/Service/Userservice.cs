// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: userservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Microsoft.CGC.DataAccess.GRPC {

  /// <summary>Holder for reflection information generated from userservice.proto</summary>
  public static partial class UserserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for userservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChF1c2Vyc2VydmljZS5wcm90bxIdTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNz",
            "LkdSUEMiJQoHQWNjb3VudBIMCgROYW1lGAEgASgJEgwKBFR5cGUYAiABKAki",
            "MQoEVXNlchIMCgROYW1lGAEgASgJEgwKBFR5cGUYAiABKAkSDQoFRW1haWwY",
            "AyABKAkiMgoFR3JvdXASDAoETmFtZRgBIAEoCRIMCgRUeXBlGAIgASgJEg0K",
            "BU93bmVyGAMgASgJIn0KDkFkZFVzZXJSZXF1ZXN0EjgKC0N1cnJlbnRVc2Vy",
            "GAEgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuVXNlchIx",
            "CgRVc2VyGAIgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMu",
            "VXNlciIyCg9BZGRVc2VyUmVzcG9uc2USDgoGU3RhdHVzGAEgASgFEg8KB01l",
            "c3NhZ2UYAiABKAkigAEKEVJlbW92ZVVzZXJSZXF1ZXN0EjgKC0N1cnJlbnRV",
            "c2VyGAEgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuVXNl",
            "chIxCgRVc2VyGAIgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdS",
            "UEMuVXNlciI1ChJSZW1vdmVVc2VyUmVzcG9uc2USDgoGU3RhdHVzGAEgASgF",
            "Eg8KB01lc3NhZ2UYAiABKAkigAEKD0FkZEdyb3VwUmVxdWVzdBI4CgtDdXJy",
            "ZW50VXNlchgBIAEoCzIjLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBD",
            "LlVzZXISMwoFR3JvdXAYAiABKAsyJC5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nl",
            "c3MuR1JQQy5Hcm91cCIzChBBZGRHcm91cFJlc3BvbnNlEg4KBlN0YXR1cxgB",
            "IAEoBRIPCgdNZXNzYWdlGAIgASgJIoMBChJSZW1vdmVHcm91cFJlcXVlc3QS",
            "OAoLQ3VycmVudFVzZXIYASABKAsyIy5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nl",
            "c3MuR1JQQy5Vc2VyEjMKBUdyb3VwGAIgASgLMiQuTWljcm9zb2Z0LkNHQy5E",
            "YXRhQWNjZXNzLkdSUEMuR3JvdXAiNgoTUmVtb3ZlR3JvdXBSZXNwb25zZRIO",
            "CgZTdGF0dXMYASABKAUSDwoHTWVzc2FnZRgCIAEoCSLCAQoYQWRkQWNjb3Vu",
            "dFRvR3JvdXBSZXF1ZXN0EjgKC0N1cnJlbnRVc2VyGAEgASgLMiMuTWljcm9z",
            "b2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuVXNlchI3CgdBY2NvdW50GAIgASgL",
            "MiYuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuQWNjb3VudBIzCgVH",
            "cm91cBgDIAEoCzIkLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkdy",
            "b3VwIjwKGUFkZEFjY291bnRUb0dyb3VwUmVzcG9uc2USDgoGU3RhdHVzGAEg",
            "ASgFEg8KB01lc3NhZ2UYAiABKAkixwEKHVJlbW92ZUFjY291bnRGcm9tR3Jv",
            "dXBSZXF1ZXN0EjgKC0N1cnJlbnRVc2VyGAEgASgLMiMuTWljcm9zb2Z0LkNH",
            "Qy5EYXRhQWNjZXNzLkdSUEMuVXNlchI3CgdBY2NvdW50GAIgASgLMiYuTWlj",
            "cm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuQWNjb3VudBIzCgVHcm91cBgD",
            "IAEoCzIkLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkdyb3VwIkEK",
            "HlJlbW92ZUFjY291bnRGcm9tR3JvdXBSZXNwb25zZRIOCgZTdGF0dXMYASAB",
            "KAUSDwoHTWVzc2FnZRgCIAEoCSJcCg5HZXRVc2VyUmVxdWVzdBI4CgtDdXJy",
            "ZW50VXNlchgBIAEoCzIjLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBD",
            "LlVzZXISEAoIVXNlck5hbWUYAiABKAkiZQoPR2V0VXNlclJlc3BvbnNlEg4K",
            "BlN0YXR1cxgBIAEoBRIPCgdNZXNzYWdlGAIgASgJEjEKBFVzZXIYAyABKAsy",
            "Iy5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5Vc2VyIl4KD0dldEdy",
            "b3VwUmVxdWVzdBI4CgtDdXJyZW50VXNlchgBIAEoCzIjLk1pY3Jvc29mdC5D",
            "R0MuRGF0YUFjY2Vzcy5HUlBDLlVzZXISEQoJR3JvdXBOYW1lGAIgASgJImgK",
            "EEdldEdyb3VwUmVzcG9uc2USDgoGU3RhdHVzGAEgASgFEg8KB01lc3NhZ2UY",
            "AiABKAkSMwoFR3JvdXAYAyABKAsyJC5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nl",
            "c3MuR1JQQy5Hcm91cCKEAQoVR2V0T3duZWRHcm91cHNSZXF1ZXN0EjgKC0N1",
            "cnJlbnRVc2VyGAEgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdS",
            "UEMuVXNlchIxCgRVc2VyGAIgASgLMiMuTWljcm9zb2Z0LkNHQy5EYXRhQWNj",
            "ZXNzLkdSUEMuVXNlciJvChZHZXRPd25lZEdyb3Vwc1Jlc3BvbnNlEg4KBlN0",
            "YXR1cxgBIAEoBRIPCgdNZXNzYWdlGAIgASgJEjQKBkdyb3VwcxgDIAMoCzIk",
            "Lk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkdyb3VwIokBChhHZXRN",
            "ZW1iZXJzT2ZHcm91cFJlcXVlc3QSOAoLQ3VycmVudFVzZXIYASABKAsyIy5N",
            "aWNyb3NvZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5Vc2VyEjMKBUdyb3VwGAIg",
            "ASgLMiQuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuR3JvdXAidgoZ",
            "R2V0TWVtYmVyc09mR3JvdXBSZXNwb25zZRIOCgZTdGF0dXMYASABKAUSDwoH",
            "TWVzc2FnZRgCIAEoCRI4CghBY2NvdW50cxgDIAMoCzImLk1pY3Jvc29mdC5D",
            "R0MuRGF0YUFjY2Vzcy5HUlBDLkFjY291bnQikwEKHkdldE1lbWJlcnNoaXBz",
            "T2ZBY2NvdW50UmVxdWVzdBI4CgtDdXJyZW50VXNlchgBIAEoCzIjLk1pY3Jv",
            "c29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLlVzZXISNwoHQWNjb3VudBgCIAEo",
            "CzImLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkFjY291bnQieAof",
            "R2V0TWVtYmVyc2hpcHNPZkFjY291bnRSZXNwb25zZRIOCgZTdGF0dXMYASAB",
            "KAUSDwoHTWVzc2FnZRgCIAEoCRI0CgZHcm91cHMYAyADKAsyJC5NaWNyb3Nv",
            "ZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5Hcm91cDLoCgoLVXNlclNlcnZpY2US",
            "aAoHQWRkVXNlchItLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkFk",
            "ZFVzZXJSZXF1ZXN0Gi4uTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMu",
            "QWRkVXNlclJlc3BvbnNlEnEKClJlbW92ZVVzZXISMC5NaWNyb3NvZnQuQ0dD",
            "LkRhdGFBY2Nlc3MuR1JQQy5SZW1vdmVVc2VyUmVxdWVzdBoxLk1pY3Jvc29m",
            "dC5DR0MuRGF0YUFjY2Vzcy5HUlBDLlJlbW92ZVVzZXJSZXNwb25zZRJrCghB",
            "ZGRHcm91cBIuLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkFkZEdy",
            "b3VwUmVxdWVzdBovLk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkFk",
            "ZEdyb3VwUmVzcG9uc2USdAoLUmVtb3ZlR3JvdXASMS5NaWNyb3NvZnQuQ0dD",
            "LkRhdGFBY2Nlc3MuR1JQQy5SZW1vdmVHcm91cFJlcXVlc3QaMi5NaWNyb3Nv",
            "ZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5SZW1vdmVHcm91cFJlc3BvbnNlEoYB",
            "ChFBZGRBY2NvdW50VG9Hcm91cBI3Lk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vz",
            "cy5HUlBDLkFkZEFjY291bnRUb0dyb3VwUmVxdWVzdBo4Lk1pY3Jvc29mdC5D",
            "R0MuRGF0YUFjY2Vzcy5HUlBDLkFkZEFjY291bnRUb0dyb3VwUmVzcG9uc2US",
            "lQEKFlJlbW92ZUFjY291bnRGcm9tR3JvdXASPC5NaWNyb3NvZnQuQ0dDLkRh",
            "dGFBY2Nlc3MuR1JQQy5SZW1vdmVBY2NvdW50RnJvbUdyb3VwUmVxdWVzdBo9",
            "Lk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLlJlbW92ZUFjY291bnRG",
            "cm9tR3JvdXBSZXNwb25zZRJoCgdHZXRVc2VyEi0uTWljcm9zb2Z0LkNHQy5E",
            "YXRhQWNjZXNzLkdSUEMuR2V0VXNlclJlcXVlc3QaLi5NaWNyb3NvZnQuQ0dD",
            "LkRhdGFBY2Nlc3MuR1JQQy5HZXRVc2VyUmVzcG9uc2USawoIR2V0R3JvdXAS",
            "Li5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5HZXRHcm91cFJlcXVl",
            "c3QaLy5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5HZXRHcm91cFJl",
            "c3BvbnNlEn0KDkdldE93bmVkR3JvdXBzEjQuTWljcm9zb2Z0LkNHQy5EYXRh",
            "QWNjZXNzLkdSUEMuR2V0T3duZWRHcm91cHNSZXF1ZXN0GjUuTWljcm9zb2Z0",
            "LkNHQy5EYXRhQWNjZXNzLkdSUEMuR2V0T3duZWRHcm91cHNSZXNwb25zZRKG",
            "AQoRR2V0TWVtYmVyc09mR3JvdXASNy5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nl",
            "c3MuR1JQQy5HZXRNZW1iZXJzT2ZHcm91cFJlcXVlc3QaOC5NaWNyb3NvZnQu",
            "Q0dDLkRhdGFBY2Nlc3MuR1JQQy5HZXRNZW1iZXJzT2ZHcm91cFJlc3BvbnNl",
            "EpgBChdHZXRNZW1iZXJzaGlwc09mQWNjb3VudBI9Lk1pY3Jvc29mdC5DR0Mu",
            "RGF0YUFjY2Vzcy5HUlBDLkdldE1lbWJlcnNoaXBzT2ZBY2NvdW50UmVxdWVz",
            "dBo+Lk1pY3Jvc29mdC5DR0MuRGF0YUFjY2Vzcy5HUlBDLkdldE1lbWJlcnNo",
            "aXBzT2ZBY2NvdW50UmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.Account), global::Microsoft.CGC.DataAccess.GRPC.Account.Parser, new[]{ "Name", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.User), global::Microsoft.CGC.DataAccess.GRPC.User.Parser, new[]{ "Name", "Type", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.Group), global::Microsoft.CGC.DataAccess.GRPC.Group.Parser, new[]{ "Name", "Type", "Owner" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest), global::Microsoft.CGC.DataAccess.GRPC.AddUserRequest.Parser, new[]{ "CurrentUser", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse), global::Microsoft.CGC.DataAccess.GRPC.AddUserResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest), global::Microsoft.CGC.DataAccess.GRPC.RemoveUserRequest.Parser, new[]{ "CurrentUser", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse), global::Microsoft.CGC.DataAccess.GRPC.RemoveUserResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.AddGroupRequest.Parser, new[]{ "CurrentUser", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.AddGroupResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupRequest.Parser, new[]{ "CurrentUser", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.RemoveGroupResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupRequest.Parser, new[]{ "CurrentUser", "Account", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.AddAccountToGroupResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupRequest.Parser, new[]{ "CurrentUser", "Account", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.RemoveAccountFromGroupResponse.Parser, new[]{ "Status", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest), global::Microsoft.CGC.DataAccess.GRPC.GetUserRequest.Parser, new[]{ "CurrentUser", "UserName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse), global::Microsoft.CGC.DataAccess.GRPC.GetUserResponse.Parser, new[]{ "Status", "Message", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.GetGroupRequest.Parser, new[]{ "CurrentUser", "GroupName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.GetGroupResponse.Parser, new[]{ "Status", "Message", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest), global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsRequest.Parser, new[]{ "CurrentUser", "User" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse), global::Microsoft.CGC.DataAccess.GRPC.GetOwnedGroupsResponse.Parser, new[]{ "Status", "Message", "Groups" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest), global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupRequest.Parser, new[]{ "CurrentUser", "Group" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse), global::Microsoft.CGC.DataAccess.GRPC.GetMembersOfGroupResponse.Parser, new[]{ "Status", "Message", "Accounts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest), global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountRequest.Parser, new[]{ "CurrentUser", "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse), global::Microsoft.CGC.DataAccess.GRPC.GetMembershipsOfAccountResponse.Parser, new[]{ "Status", "Message", "Groups" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      name_ = other.name_;
      type_ = other.type_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      email_ = other.email_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Email != other.Email) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Group : pb::IMessage<Group> {
    private static readonly pb::MessageParser<Group> _parser = new pb::MessageParser<Group>(() => new Group());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Group> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group(Group other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      owner_ = other.owner_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Group Clone() {
      return new Group(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Group);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Group other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Owner != other.Owner) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Group other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserRequest : pb::IMessage<AddUserRequest> {
    private static readonly pb::MessageParser<AddUserRequest> _parser = new pb::MessageParser<AddUserRequest>(() => new AddUserRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest(AddUserRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRequest Clone() {
      return new AddUserRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserResponse : pb::IMessage<AddUserResponse> {
    private static readonly pb::MessageParser<AddUserResponse> _parser = new pb::MessageParser<AddUserResponse>(() => new AddUserResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse(AddUserResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserResponse Clone() {
      return new AddUserResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveUserRequest : pb::IMessage<RemoveUserRequest> {
    private static readonly pb::MessageParser<RemoveUserRequest> _parser = new pb::MessageParser<RemoveUserRequest>(() => new RemoveUserRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserRequest(RemoveUserRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserRequest Clone() {
      return new RemoveUserRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveUserResponse : pb::IMessage<RemoveUserResponse> {
    private static readonly pb::MessageParser<RemoveUserResponse> _parser = new pb::MessageParser<RemoveUserResponse>(() => new RemoveUserResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserResponse(RemoveUserResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveUserResponse Clone() {
      return new RemoveUserResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddGroupRequest : pb::IMessage<AddGroupRequest> {
    private static readonly pb::MessageParser<AddGroupRequest> _parser = new pb::MessageParser<AddGroupRequest>(() => new AddGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupRequest(AddGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupRequest Clone() {
      return new AddGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddGroupResponse : pb::IMessage<AddGroupResponse> {
    private static readonly pb::MessageParser<AddGroupResponse> _parser = new pb::MessageParser<AddGroupResponse>(() => new AddGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupResponse(AddGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddGroupResponse Clone() {
      return new AddGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveGroupRequest : pb::IMessage<RemoveGroupRequest> {
    private static readonly pb::MessageParser<RemoveGroupRequest> _parser = new pb::MessageParser<RemoveGroupRequest>(() => new RemoveGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupRequest(RemoveGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupRequest Clone() {
      return new RemoveGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveGroupResponse : pb::IMessage<RemoveGroupResponse> {
    private static readonly pb::MessageParser<RemoveGroupResponse> _parser = new pb::MessageParser<RemoveGroupResponse>(() => new RemoveGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupResponse(RemoveGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveGroupResponse Clone() {
      return new RemoveGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountToGroupRequest : pb::IMessage<AddAccountToGroupRequest> {
    private static readonly pb::MessageParser<AddAccountToGroupRequest> _parser = new pb::MessageParser<AddAccountToGroupRequest>(() => new AddAccountToGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountToGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupRequest(AddAccountToGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Account = other.account_ != null ? other.Account.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupRequest Clone() {
      return new AddAccountToGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 3;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountToGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountToGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (group_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountToGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (account_ == null) {
              account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 26: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddAccountToGroupResponse : pb::IMessage<AddAccountToGroupResponse> {
    private static readonly pb::MessageParser<AddAccountToGroupResponse> _parser = new pb::MessageParser<AddAccountToGroupResponse>(() => new AddAccountToGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddAccountToGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupResponse(AddAccountToGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddAccountToGroupResponse Clone() {
      return new AddAccountToGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddAccountToGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddAccountToGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddAccountToGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountFromGroupRequest : pb::IMessage<RemoveAccountFromGroupRequest> {
    private static readonly pb::MessageParser<RemoveAccountFromGroupRequest> _parser = new pb::MessageParser<RemoveAccountFromGroupRequest>(() => new RemoveAccountFromGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountFromGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupRequest(RemoveAccountFromGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Account = other.account_ != null ? other.Account.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupRequest Clone() {
      return new RemoveAccountFromGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 3;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountFromGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountFromGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (group_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountFromGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (account_ == null) {
              account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
            }
            input.ReadMessage(account_);
            break;
          }
          case 26: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveAccountFromGroupResponse : pb::IMessage<RemoveAccountFromGroupResponse> {
    private static readonly pb::MessageParser<RemoveAccountFromGroupResponse> _parser = new pb::MessageParser<RemoveAccountFromGroupResponse>(() => new RemoveAccountFromGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveAccountFromGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupResponse(RemoveAccountFromGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveAccountFromGroupResponse Clone() {
      return new RemoveAccountFromGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveAccountFromGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveAccountFromGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveAccountFromGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserRequest : pb::IMessage<GetUserRequest> {
    private static readonly pb::MessageParser<GetUserRequest> _parser = new pb::MessageParser<GetUserRequest>(() => new GetUserRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest(GetUserRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      userName_ = other.userName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserRequest Clone() {
      return new GetUserRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 2;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (UserName != other.UserName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            UserName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUserResponse : pb::IMessage<GetUserResponse> {
    private static readonly pb::MessageParser<GetUserResponse> _parser = new pb::MessageParser<GetUserResponse>(() => new GetUserResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUserResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse(GetUserResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUserResponse Clone() {
      return new GetUserResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 3;
    private global::Microsoft.CGC.DataAccess.GRPC.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUserResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUserResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (user_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUserResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (user_ == null) {
              user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGroupRequest : pb::IMessage<GetGroupRequest> {
    private static readonly pb::MessageParser<GetGroupRequest> _parser = new pb::MessageParser<GetGroupRequest>(() => new GetGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupRequest(GetGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      groupName_ = other.groupName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupRequest Clone() {
      return new GetGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "GroupName" field.</summary>
    public const int GroupNameFieldNumber = 2;
    private string groupName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupName {
      get { return groupName_; }
      set {
        groupName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (GroupName != other.GroupName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (GroupName.Length != 0) hash ^= GroupName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (GroupName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (GroupName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.GroupName.Length != 0) {
        GroupName = other.GroupName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            GroupName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGroupResponse : pb::IMessage<GetGroupResponse> {
    private static readonly pb::MessageParser<GetGroupResponse> _parser = new pb::MessageParser<GetGroupResponse>(() => new GetGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupResponse(GetGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGroupResponse Clone() {
      return new GetGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 3;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (group_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOwnedGroupsRequest : pb::IMessage<GetOwnedGroupsRequest> {
    private static readonly pb::MessageParser<GetOwnedGroupsRequest> _parser = new pb::MessageParser<GetOwnedGroupsRequest>(() => new GetOwnedGroupsRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOwnedGroupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsRequest(GetOwnedGroupsRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsRequest Clone() {
      return new GetOwnedGroupsRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOwnedGroupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOwnedGroupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(User, other.User)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOwnedGroupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        User.MergeFrom(other.User);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(user_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetOwnedGroupsResponse : pb::IMessage<GetOwnedGroupsResponse> {
    private static readonly pb::MessageParser<GetOwnedGroupsResponse> _parser = new pb::MessageParser<GetOwnedGroupsResponse>(() => new GetOwnedGroupsResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOwnedGroupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsResponse(GetOwnedGroupsResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      groups_ = other.groups_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOwnedGroupsResponse Clone() {
      return new GetOwnedGroupsResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Microsoft.CGC.DataAccess.GRPC.Group> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(26, global::Microsoft.CGC.DataAccess.GRPC.Group.Parser);
    private readonly pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group> groups_ = new pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group> Groups {
      get { return groups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOwnedGroupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOwnedGroupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if(!groups_.Equals(other.groups_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= groups_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOwnedGroupsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      groups_.Add(other.groups_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembersOfGroupRequest : pb::IMessage<GetMembersOfGroupRequest> {
    private static readonly pb::MessageParser<GetMembersOfGroupRequest> _parser = new pb::MessageParser<GetMembersOfGroupRequest>(() => new GetMembersOfGroupRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembersOfGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupRequest(GetMembersOfGroupRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Group = other.group_ != null ? other.Group.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupRequest Clone() {
      return new GetMembersOfGroupRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Group" field.</summary>
    public const int GroupFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Group group_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Group Group {
      get { return group_; }
      set {
        group_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembersOfGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembersOfGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Group, other.Group)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (group_ != null) hash ^= Group.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (group_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (group_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Group);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembersOfGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.group_ != null) {
        if (group_ == null) {
          group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
        }
        Group.MergeFrom(other.Group);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (group_ == null) {
              group_ = new global::Microsoft.CGC.DataAccess.GRPC.Group();
            }
            input.ReadMessage(group_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembersOfGroupResponse : pb::IMessage<GetMembersOfGroupResponse> {
    private static readonly pb::MessageParser<GetMembersOfGroupResponse> _parser = new pb::MessageParser<GetMembersOfGroupResponse>(() => new GetMembersOfGroupResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembersOfGroupResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupResponse(GetMembersOfGroupResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      accounts_ = other.accounts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembersOfGroupResponse Clone() {
      return new GetMembersOfGroupResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Accounts" field.</summary>
    public const int AccountsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Microsoft.CGC.DataAccess.GRPC.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(26, global::Microsoft.CGC.DataAccess.GRPC.Account.Parser);
    private readonly pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Account> accounts_ = new pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Account> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembersOfGroupResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembersOfGroupResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if(!accounts_.Equals(other.accounts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= accounts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      accounts_.WriteTo(output, _repeated_accounts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembersOfGroupResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      accounts_.Add(other.accounts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembershipsOfAccountRequest : pb::IMessage<GetMembershipsOfAccountRequest> {
    private static readonly pb::MessageParser<GetMembershipsOfAccountRequest> _parser = new pb::MessageParser<GetMembershipsOfAccountRequest>(() => new GetMembershipsOfAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembershipsOfAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountRequest(GetMembershipsOfAccountRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      Account = other.account_ != null ? other.Account.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountRequest Clone() {
      return new GetMembershipsOfAccountRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "Account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembershipsOfAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembershipsOfAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(Account, other.Account)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembershipsOfAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
        }
        Account.MergeFrom(other.Account);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (account_ == null) {
              account_ = new global::Microsoft.CGC.DataAccess.GRPC.Account();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMembershipsOfAccountResponse : pb::IMessage<GetMembershipsOfAccountResponse> {
    private static readonly pb::MessageParser<GetMembershipsOfAccountResponse> _parser = new pb::MessageParser<GetMembershipsOfAccountResponse>(() => new GetMembershipsOfAccountResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMembershipsOfAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountResponse(GetMembershipsOfAccountResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      groups_ = other.groups_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMembershipsOfAccountResponse Clone() {
      return new GetMembershipsOfAccountResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Microsoft.CGC.DataAccess.GRPC.Group> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(26, global::Microsoft.CGC.DataAccess.GRPC.Group.Parser);
    private readonly pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group> groups_ = new pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Microsoft.CGC.DataAccess.GRPC.Group> Groups {
      get { return groups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMembershipsOfAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMembershipsOfAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if(!groups_.Equals(other.groups_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= groups_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMembershipsOfAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      groups_.Add(other.groups_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
