// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workflowservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Microsoft.CGC.DataAccess.GRPC {

  /// <summary>Holder for reflection information generated from workflowservice.proto</summary>
  public static partial class WorkflowserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for workflowservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WorkflowserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV3b3JrZmxvd3NlcnZpY2UucHJvdG8SHU1pY3Jvc29mdC5DR0MuRGF0YUFj",
            "Y2Vzcy5HUlBDIkUKGUFkZE9yVXBkYXRlRW50aXR5UmVzcG9uc2USFgoOQWRk",
            "ZWRPclVwZGF0ZWQYASABKAgSEAoIRW50aXR5SWQYAiABKAkiPAoQR2V0RW50",
            "aXR5UmVxdWVzdBIRCglFbnRpdHlJZHMYASADKAkSFQoNQ3JlYXRlZEJ5VXNl",
            "chgCIAEoCSIUCgdSZXF1ZXN0EgkKAWEYASABKAkiFQoIUmVzcG9uc2USCQoB",
            "YhgBIAEoCTJpCg9Xb3JrZmxvd1NlcnZpY2USVgoDRnVuEiYuTWljcm9zb2Z0",
            "LkNHQy5EYXRhQWNjZXNzLkdSUEMuUmVxdWVzdBonLk1pY3Jvc29mdC5DR0Mu",
            "RGF0YUFjY2Vzcy5HUlBDLlJlc3BvbnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.AddOrUpdateEntityResponse), global::Microsoft.CGC.DataAccess.GRPC.AddOrUpdateEntityResponse.Parser, new[]{ "AddedOrUpdated", "EntityId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.GetEntityRequest), global::Microsoft.CGC.DataAccess.GRPC.GetEntityRequest.Parser, new[]{ "EntityIds", "CreatedByUser" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.Request), global::Microsoft.CGC.DataAccess.GRPC.Request.Parser, new[]{ "A" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.Response), global::Microsoft.CGC.DataAccess.GRPC.Response.Parser, new[]{ "B" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AddOrUpdateEntityResponse : pb::IMessage<AddOrUpdateEntityResponse> {
    private static readonly pb::MessageParser<AddOrUpdateEntityResponse> _parser = new pb::MessageParser<AddOrUpdateEntityResponse>(() => new AddOrUpdateEntityResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddOrUpdateEntityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.WorkflowserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOrUpdateEntityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOrUpdateEntityResponse(AddOrUpdateEntityResponse other) : this() {
      addedOrUpdated_ = other.addedOrUpdated_;
      entityId_ = other.entityId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddOrUpdateEntityResponse Clone() {
      return new AddOrUpdateEntityResponse(this);
    }

    /// <summary>Field number for the "AddedOrUpdated" field.</summary>
    public const int AddedOrUpdatedFieldNumber = 1;
    private bool addedOrUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AddedOrUpdated {
      get { return addedOrUpdated_; }
      set {
        addedOrUpdated_ = value;
      }
    }

    /// <summary>Field number for the "EntityId" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private string entityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddOrUpdateEntityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddOrUpdateEntityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AddedOrUpdated != other.AddedOrUpdated) return false;
      if (EntityId != other.EntityId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AddedOrUpdated != false) hash ^= AddedOrUpdated.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AddedOrUpdated != false) {
        output.WriteRawTag(8);
        output.WriteBool(AddedOrUpdated);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AddedOrUpdated != false) {
        size += 1 + 1;
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddOrUpdateEntityResponse other) {
      if (other == null) {
        return;
      }
      if (other.AddedOrUpdated != false) {
        AddedOrUpdated = other.AddedOrUpdated;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AddedOrUpdated = input.ReadBool();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetEntityRequest : pb::IMessage<GetEntityRequest> {
    private static readonly pb::MessageParser<GetEntityRequest> _parser = new pb::MessageParser<GetEntityRequest>(() => new GetEntityRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEntityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.WorkflowserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEntityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEntityRequest(GetEntityRequest other) : this() {
      entityIds_ = other.entityIds_.Clone();
      createdByUser_ = other.createdByUser_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEntityRequest Clone() {
      return new GetEntityRequest(this);
    }

    /// <summary>Field number for the "EntityIds" field.</summary>
    public const int EntityIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_entityIds_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> entityIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EntityIds {
      get { return entityIds_; }
    }

    /// <summary>Field number for the "CreatedByUser" field.</summary>
    public const int CreatedByUserFieldNumber = 2;
    private string createdByUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedByUser {
      get { return createdByUser_; }
      set {
        createdByUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEntityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEntityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entityIds_.Equals(other.entityIds_)) return false;
      if (CreatedByUser != other.CreatedByUser) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entityIds_.GetHashCode();
      if (CreatedByUser.Length != 0) hash ^= CreatedByUser.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entityIds_.WriteTo(output, _repeated_entityIds_codec);
      if (CreatedByUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CreatedByUser);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entityIds_.CalculateSize(_repeated_entityIds_codec);
      if (CreatedByUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedByUser);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEntityRequest other) {
      if (other == null) {
        return;
      }
      entityIds_.Add(other.entityIds_);
      if (other.CreatedByUser.Length != 0) {
        CreatedByUser = other.CreatedByUser;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            entityIds_.AddEntriesFrom(input, _repeated_entityIds_codec);
            break;
          }
          case 18: {
            CreatedByUser = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.WorkflowserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      a_ = other.a_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 1;
    private string a_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string A {
      get { return a_; }
      set {
        a_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (A != other.A) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (A.Length != 0) hash ^= A.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (A.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(A);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (A.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(A);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      if (other.A.Length != 0) {
        A = other.A;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            A = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.WorkflowserviceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      b_ = other.b_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 1;
    private string b_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string B {
      get { return b_; }
      set {
        b_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (B != other.B) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (B.Length != 0) hash ^= B.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (B.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(B);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (B.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(B);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.B.Length != 0) {
        B = other.B;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            B = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
