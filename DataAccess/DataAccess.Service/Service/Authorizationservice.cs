// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authorizationservice.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Microsoft.CGC.DataAccess.GRPC {

  /// <summary>Holder for reflection information generated from authorizationservice.proto</summary>
  public static partial class AuthorizationserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for authorizationservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthorizationserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChphdXRob3JpemF0aW9uc2VydmljZS5wcm90bxIdTWljcm9zb2Z0LkNHQy5E",
            "YXRhQWNjZXNzLkdSUEMaEXVzZXJzZXJ2aWNlLnByb3RvIsMBChZDaGVja1Bl",
            "cm1pc3Npb25SZXF1ZXN0EjgKC0N1cnJlbnRVc2VyGAEgASgLMiMuTWljcm9z",
            "b2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuVXNlchIxCgRVc2VyGAIgASgLMiMu",
            "TWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuVXNlchIUCgxSZXNvdXJj",
            "ZVR5cGUYAyABKAkSEgoKUmVzb3VyY2VJZBgEIAEoCRISCgpQZXJtaXNzaW9u",
            "GAUgASgJIlEKF0NoZWNrUGVybWlzc2lvblJlc3BvbnNlEg4KBlN0YXR1cxgB",
            "IAEoBRIPCgdNZXNzYWdlGAIgASgJEhUKDUhhc1Blcm1pc3Npb24YAyABKAgy",
            "mQEKFEF1dGhvcml6YXRpb25TZXJ2aWNlEoABCg9DaGVja1Blcm1pc3Npb24S",
            "NS5NaWNyb3NvZnQuQ0dDLkRhdGFBY2Nlc3MuR1JQQy5DaGVja1Blcm1pc3Np",
            "b25SZXF1ZXN0GjYuTWljcm9zb2Z0LkNHQy5EYXRhQWNjZXNzLkdSUEMuQ2hl",
            "Y2tQZXJtaXNzaW9uUmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Microsoft.CGC.DataAccess.GRPC.UserserviceReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.CheckPermissionRequest), global::Microsoft.CGC.DataAccess.GRPC.CheckPermissionRequest.Parser, new[]{ "CurrentUser", "User", "ResourceType", "ResourceId", "Permission" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Microsoft.CGC.DataAccess.GRPC.CheckPermissionResponse), global::Microsoft.CGC.DataAccess.GRPC.CheckPermissionResponse.Parser, new[]{ "Status", "Message", "HasPermission" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CheckPermissionRequest : pb::IMessage<CheckPermissionRequest> {
    private static readonly pb::MessageParser<CheckPermissionRequest> _parser = new pb::MessageParser<CheckPermissionRequest>(() => new CheckPermissionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckPermissionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.AuthorizationserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionRequest(CheckPermissionRequest other) : this() {
      CurrentUser = other.currentUser_ != null ? other.CurrentUser.Clone() : null;
      User = other.user_ != null ? other.User.Clone() : null;
      resourceType_ = other.resourceType_;
      resourceId_ = other.resourceId_;
      permission_ = other.permission_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionRequest Clone() {
      return new CheckPermissionRequest(this);
    }

    /// <summary>Field number for the "CurrentUser" field.</summary>
    public const int CurrentUserFieldNumber = 1;
    private global::Microsoft.CGC.DataAccess.GRPC.User currentUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User CurrentUser {
      get { return currentUser_; }
      set {
        currentUser_ = value;
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Microsoft.CGC.DataAccess.GRPC.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Microsoft.CGC.DataAccess.GRPC.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "ResourceType" field.</summary>
    public const int ResourceTypeFieldNumber = 3;
    private string resourceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResourceId" field.</summary>
    public const int ResourceIdFieldNumber = 4;
    private string resourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permission" field.</summary>
    public const int PermissionFieldNumber = 5;
    private string permission_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Permission {
      get { return permission_; }
      set {
        permission_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckPermissionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckPermissionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CurrentUser, other.CurrentUser)) return false;
      if (!object.Equals(User, other.User)) return false;
      if (ResourceType != other.ResourceType) return false;
      if (ResourceId != other.ResourceId) return false;
      if (Permission != other.Permission) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (currentUser_ != null) hash ^= CurrentUser.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (ResourceType.Length != 0) hash ^= ResourceType.GetHashCode();
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      if (Permission.Length != 0) hash ^= Permission.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (currentUser_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CurrentUser);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (ResourceType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResourceType);
      }
      if (ResourceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ResourceId);
      }
      if (Permission.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Permission);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (currentUser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentUser);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (ResourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceType);
      }
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      if (Permission.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Permission);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckPermissionRequest other) {
      if (other == null) {
        return;
      }
      if (other.currentUser_ != null) {
        if (currentUser_ == null) {
          currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        CurrentUser.MergeFrom(other.CurrentUser);
      }
      if (other.user_ != null) {
        if (user_ == null) {
          user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.ResourceType.Length != 0) {
        ResourceType = other.ResourceType;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      if (other.Permission.Length != 0) {
        Permission = other.Permission;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (currentUser_ == null) {
              currentUser_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(currentUser_);
            break;
          }
          case 18: {
            if (user_ == null) {
              user_ = new global::Microsoft.CGC.DataAccess.GRPC.User();
            }
            input.ReadMessage(user_);
            break;
          }
          case 26: {
            ResourceType = input.ReadString();
            break;
          }
          case 34: {
            ResourceId = input.ReadString();
            break;
          }
          case 42: {
            Permission = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CheckPermissionResponse : pb::IMessage<CheckPermissionResponse> {
    private static readonly pb::MessageParser<CheckPermissionResponse> _parser = new pb::MessageParser<CheckPermissionResponse>(() => new CheckPermissionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckPermissionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Microsoft.CGC.DataAccess.GRPC.AuthorizationserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionResponse(CheckPermissionResponse other) : this() {
      status_ = other.status_;
      message_ = other.message_;
      hasPermission_ = other.hasPermission_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckPermissionResponse Clone() {
      return new CheckPermissionResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HasPermission" field.</summary>
    public const int HasPermissionFieldNumber = 3;
    private bool hasPermission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPermission {
      get { return hasPermission_; }
      set {
        hasPermission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckPermissionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckPermissionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (HasPermission != other.HasPermission) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (HasPermission != false) hash ^= HasPermission.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (HasPermission != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasPermission);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (HasPermission != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckPermissionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.HasPermission != false) {
        HasPermission = other.HasPermission;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 24: {
            HasPermission = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
